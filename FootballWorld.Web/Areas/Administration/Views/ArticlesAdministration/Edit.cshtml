@model FootballWorld.ViewModel.DetailsArticleViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Article</h2>


@using (Html.BeginForm("Edit", "ArticlesAdministration", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        @{
    if (Model.Image != null)
    {
        string imageBase64 = Convert.ToBase64String(Model.Image);
        string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
        <hr />
        <div>
            <img src="@imageSrc" class="img-details" />
        </div>
        <hr />
    }
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subtitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subtitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subtitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { @cols = "200", @rows = "6", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" id="DateCreated" name="DateCreated" class="form-control" required="required">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input name="updatedImage" id="UpdatedImage" type="file" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
        $(function () {
            $("#DateCreated").datepicker({
                dateFormat: "dd/mm/yy",
                defaultDate: 0,
                showOtherMonths: true,
                changeYear: true,
                minDate: '-150Y',
                maxDate: '-0Y'
            });
            $("#DateCreated").datepicker('setDate', (function () { return "@(Model.DateCreated.ToString(("dd/MM/yyyy")))"; }()));
        });
</script>
}
